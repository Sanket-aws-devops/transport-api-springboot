name: Deploy Java API to EC2 (Dev Environment)

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: self-hosted
    environment: Dev

    #env:
      #SERVER_PORT: ${{ secrets.SERVER_PORT }}
      #DB_URL: ${{ secrets.DB_URL }}
      #DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      - name: 📄 Display working directory contents
        run: ls -lh

      - name: ✅ Make gradlew Executable
        run: chmod +x ./gradlew

      - name: 🛠️ Build JAR with Gradle (bootJar)
        run: ./gradlew clean bootJar

      - name: 📄 Display Built JAR Files
        run: ls -lh build/libs

      - name: 📁 Create Deployment Directory
        run: |
          sudo mkdir -p /opt/transport-api
          sudo chown -R $USER:$USER /opt/transport-api

      - name: 🚚 Copy Boot JAR to Deployment Directory as fixed name
        run: |
          JAR_FILE=$(ls -S build/libs/*.jar | head -n 1)
          echo "Deploying $JAR_FILE to /opt/transport-api/transport-api.jar"
          cp "$JAR_FILE" /opt/transport-api/transport-api.jar

      - name: 🚀 Start Spring Boot API in Background (with nohup)
        run: |
          echo "Starting Spring Boot application with resolved GitHub secrets:"
          echo "▶️ PORT: ${{ secrets.SERVER_PORT }}"
          echo "▶️ DB_URL: [MASKED]"
          echo "▶️ DB_USERNAME: ${{ secrets.DB_USERNAME }}"

          JAR_PATH="/opt/transport-api/transport-api.jar"
          LOG_FILE="/opt/transport-api/app.log"

          if [ ! -f "$JAR_PATH" ]; then
            echo "❌ JAR file not found: $JAR_PATH"
            exit 1
          fi

          EXISTING_PID=$(pgrep -f "$JAR_PATH" || true)
          if [ -n "$EXISTING_PID" ]; then
            echo "⚠️ Found existing process (PID: $EXISTING_PID). Killing..."
            sudo kill -9 $EXISTING_PID || true
          fi

          # ✅ Pass secrets as Java flags using GitHub expressions
          nohup java \
            -Dserver.port=8080  \
            -Dspring.datasource.url="jdbc:mysql://54.226.148.124:3306/transport?createDatabaseIfNotExist=true" \
            -Dspring.datasource.username="admin" \
            -Dspring.datasource.password="admin@123" \
            -jar "$JAR_PATH" > "$LOG_FILE" 2>&1 < /dev/null & disown

          echo "✅ Application started. To tail logs:"
          echo "sudo tail -f $LOG_FILE"
