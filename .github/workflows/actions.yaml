name: Deploy Java API to EC2 (Dev Environment)

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: self-hosted
    environment: Dev

    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      - name: ✅ Make gradlew Executable
        run: chmod +x ./gradlew

      - name: 🛠️ Build JAR with Gradle
        run: ./gradlew clean build

      - name: 📄 Display Built JAR Files
        run: ls -lh build/libs

      - name: 📁 Create Deployment Directory
        run: |
          sudo mkdir -p /opt/transport-api
          sudo chown -R $USER:$USER /opt/transport-api

      - name: 🚚 Copy JAR to Deployment Directory
        run: |
          JAR_FILE=$(ls build/libs/*.jar | head -n 1)
          echo "Deploying $JAR_FILE to /opt/transport-api/"
          cp "$JAR_FILE" /opt/transport-api

      - name: 🚀 Start Spring Boot API in Background
        run: |
          echo "Starting Spring Boot application with the following config:"
          echo "PORT: $SERVER_PORT"
          echo "DB_URL: $DB_URL"
          echo "USERNAME: $DB_USERNAME"

          JAR_PATH="/opt/transport-api/transport-api.jar"
          LOG_FILE="/opt/transport-api/app.log"

          # 🔎 Check if JAR exists
          if [ ! -f "$JAR_PATH" ]; then
            echo "❌ JAR file not found: $JAR_PATH"
            exit 1
          fi

          # 🛑 Kill previously running instance (if any)
          EXISTING_PID=$(pgrep -f "$JAR_PATH" || true)
          if [ -n "$EXISTING_PID" ]; then
            echo "⚠️ Found existing process (PID: $EXISTING_PID). Killing..."
            sudo kill -9 $EXISTING_PID || true
          fi

          # 🟢 Start application via nohup
          echo "▶️ Launching application..."
          nohup java \
            -Dserver.port=$SERVER_PORT \
            -Dspring.datasource.url="$DB_URL" \
            -Dspring.datasource.username="$DB_USERNAME" \
            -Dspring.datasource.password="$DB_PASSWORD" \
            -jar "$JAR_PATH" > "$LOG_FILE" 2>&1 &

          echo "✅ Application started. To tail logs, SSH into EC2 and run:"
          echo "sudo tail -f $LOG_FILE"
